I wrote a screenreader help section. Testing NVDA, this section does get read in the beginning.
However, NVDA overrides the keyboard buttons. That's unfortunate.
focus() forces NVDA to read the title, then tab title, then the focus()d element.
from testing, role="status" works far better than focus() + tabindex="-1". focus() re-reads the title constantly, and it is very unreliable. plus, focus() requires outline:none; to suppress the dotted box that appears constantly after the first time you press tab
screenreader support: roles, semantic tags, and help section

"Since I have astigmatism...The high contrast black background hurts my eyes but I could read one or two chapters max without read mode.
I just wish that your site could have a milder dark background that's readable even at low brightness."

https://ux.stackexchange.com/a/53268
People with astigmatism (approximately 50% of the population) find it harder to read white text on black than black text on white. Part of this has to do with light levels: with a bright display (white background) the iris closes a bit more, decreasing the effect of the "deformed" lens; with a dark display (black background) the iris opens to receive more light and the deformation of the lens creates a much fuzzier focus at the eye.
Jason Harrison – Post Doctoral Fellow, Imager Lab Manager – Sensory Perception and Interaction Research Group, University of British Columbia



Accessibility:
"Some people cannot use a mouse, including many older users with limited fine motor control. An accessible website does not rely on the mouse; it provides all functionality via a keyboard. Then people with disabilities can use assistive technologies that mimic the keyboard, such as speech input."
Use case: half-blind person.
	http://www.karlgroves.com/2013/09/05/the-6-simplest-web-accessibility-tests-anyone-can-do/
	"Colors on the site are essentially removed entirely. All background is black and all foreground text is a significantly brighter color such as white or yellow (users can customize this)."
	that means that we can't rely on colors to distinguish things. in particular, links must be underlineable.
	"30% of respondents state they used High Contrast Modes...there are far more people with low-vision than those who are totally blind"
Use case: blind person. Can he hear where the links are and learn how to trigger them? Can he rebind the keys?
	the CSS places the link description as [q], which isn't selectable. Screen readers do read it, which is repetitive, and screen reader users don't use the application hotkeys to select links; they have their own keys. So the hotkeys can be disabled.
	note that the "title" element is not read by screenreaders: https://silktide.com/things-i-learned-by-pretending-to-be-blind-for-a-week/
Use case: keyboard-only. He should still be able to rebind keys, especially if his layout is nonstandard.
	that means that the option keys are tabbable for accessibility. so they're tabbable at the beginning, but disappear from tab order after that.
Use case: mouse-only. You don't need the distracting keyboard shortcuts, so they go away.

Links should be complete. Screenreader users can see the text of a link because their system lets them skip through each link in turn, but they can't see the context around the link. So if the link is "click [here] to move to the next passage", the screenreader user will only see the word "here".
In addition, more complete links have larger areas, and hence are easier to click.